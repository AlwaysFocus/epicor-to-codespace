{"Mode":"Backup","Version":"4.2.400","SystemCode":"ERP","LibraryId":"BootStrapBill","Library":{"OriginalID":"BootStrapBill","Description":"For bootstrapping function development :)","GlobalID":"1cccf98e-1d6d-46fd-b8f2-9e3a432fd651","EpicorVersion":"4.2.400","Revision":90,"Published":true,"Private":false,"Disabled":false,"Mode":0,"AllowCustomCodeWidgets":true,"AllowCustomCodeFunctions":true,"DirectDBAccess":2,"OwnedByCompany":"EPIC06","Owner":"epicor","Functions":[{"FunctionID":"DownloadProject","Kind":2,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":null,"Body":"{\"Code\":\"// Define size limits and validation delegates at the start\\r\\nconst int MAX_SINGLE_FILE_SIZE_BYTES = 100 * 1024 * 1024;  // 100MB\\r\\nconst int MAX_TOTAL_ZIP_SIZE_BYTES = 500 * 1024 * 1024;    // 500MB\\r\\nconst int MAX_ASSEMBLY_COUNT = 100;\\r\\n\\r\\nvar validate_file_path = new Func<string, bool>(path => {\\r\\n    if (string.IsNullOrEmpty(path)) return false;\\r\\n    if (path.Length > 260) return false;  // Windows MAX_PATH\\r\\n    if (!File.Exists(path)) return false;\\r\\n    if (new FileInfo(path).Length > MAX_SINGLE_FILE_SIZE_BYTES) return false;\\r\\n    return true;\\r\\n});\\r\\n\\r\\nvar validate_dll_extension = new Func<string, bool>(path => \\r\\n    Path.GetExtension(path)?.Equals(\\\".dll\\\", StringComparison.OrdinalIgnoreCase) ?? false);\\r\\n\\r\\n// List of assembly paths to include\\r\\nvar assembly_paths = new List<string> {\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Compatibility.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/EntityFramework.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.BusinessQuery.Contracts.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.Customization.Bpm.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.Customization.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.Diagnostics.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.Functions.Core.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Bin/Epicor.Ice.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.Ice.Tasks.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.Customization.Core.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Epicor.MetaFX.Core.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Bin/Epicor.ServiceModel.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Bin/Epicor.System.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Erp.Data.910100.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Ice.Data.Model.dll\\\"),\\r\\n    System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, \\\"Assemblies/Ice.Lib.Shared.dll\\\")\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\nFunc<string, string> convertToAssemblyName = input =>\\r\\n{\\r\\n    if (string.IsNullOrEmpty(input))\\r\\n        return string.Empty;\\r\\n\\r\\n    // Split the input by colon\\r\\n    string[] parts = input.Split(':');\\r\\n    \\r\\n    if (parts.Length < 1)\\r\\n        return input + \\\".dll\\\";\\r\\n\\r\\n    // Create output with first part + \\\"Contracts\\\" + remaining parts\\r\\n    var outputParts = new List<string>\\r\\n    {\\r\\n        parts[0], // First part\\r\\n        \\\"Contracts\\\" // Insert Contracts after first part\\r\\n    };\\r\\n    \\r\\n    // Add remaining parts if any\\r\\n    if (parts.Length > 1)\\r\\n    {\\r\\n        outputParts.AddRange(parts.Skip(1));\\r\\n    }\\r\\n    \\r\\n    // Join all parts and append .dll\\r\\n    return string.Join(\\\".\\\", outputParts) + \\\".dll\\\";\\r\\n};\\r\\n\\r\\ntry\\r\\n{\\r\\n    // Validate assembly paths upfront\\r\\n    if (assembly_paths.Count > MAX_ASSEMBLY_COUNT)\\r\\n    {\\r\\n        throw new ArgumentException($\\\"Too many assemblies. Maximum allowed: {MAX_ASSEMBLY_COUNT}\\\");\\r\\n    }\\r\\n\\r\\n    var invalid_paths = assembly_paths\\r\\n        .Where(path => !validate_file_path(path) || !validate_dll_extension(path))\\r\\n        .ToList();\\r\\n\\r\\n    if (invalid_paths.Any())\\r\\n    {\\r\\n        throw new ArgumentException($\\\"Invalid assembly paths found: {string.Join(\\\", \\\", invalid_paths)}\\\");\\r\\n    }\\r\\n\\r\\n    // Ensure that the library is set to dump sources and get assemblies\\r\\n    CallService<EfxLibraryDesignerSvcContract>(svc => {\\r\\n        var lib = svc.GetLibrary(LibraryID);\\r\\n        var libHead = lib.EfxLibrary.FirstOrDefault();\\r\\n        \\r\\n        if(libHead == null)\\r\\n        {\\r\\n            throw new Exception(\\\"Unable to retrieve library.\\\");\\r\\n        }\\r\\n        \\r\\n        if(libHead.Published)\\r\\n        {\\r\\n          svc.DemoteFromProduction(LibraryID);\\r\\n          lib = svc.GetLibrary(LibraryID);\\r\\n          libHead = lib.EfxLibrary.FirstOrDefault();\\r\\n          if(libHead == null)\\r\\n          {\\r\\n            throw new Exception(\\\"Failed to retrieve library after demoting.\\\");\\r\\n          }\\r\\n        }\\r\\n        \\r\\n        if(!libHead.DumpSources)\\r\\n        {\\r\\n            libHead.DumpSources = true;\\r\\n            libHead.RowMod = \\\"U\\\";\\r\\n            svc.ApplyChangesWithDiagnostics(ref lib, out _);\\r\\n        }\\r\\n        \\r\\n        if(!libHead.Published)\\r\\n        {\\r\\n          svc.PromoteToProduction(LibraryID);\\r\\n        }\\r\\n        \\r\\n        \\r\\n        // Get additional assemblies\\r\\n        var assemblies = lib.EfxRefAssembly.ToList();\\r\\n        foreach(var assembly in assemblies)\\r\\n        {\\r\\n          assembly_paths.Add(System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, $\\\"Assemblies/{assembly.Assembly}\\\"));\\r\\n        }\\r\\n        \\r\\n        // Get referenced services\\r\\n        var services = lib.EfxRefService.ToList();\\r\\n        foreach(var service in services)\\r\\n        {\\r\\n          var serviceDllName = convertToAssemblyName(service.ServiceID);\\r\\n          assembly_paths.Add(System.IO.Path.Combine(Epicor.Utility.SpecialPath.DeploymentServerDirectory, $\\\"Assemblies/{serviceDllName}\\\"));\\r\\n        }\\r\\n        \\r\\n        \\r\\n        Message +=  $\\\"Updated assembly list is: {string.Join(\\\", \\\", assembly_paths)}\\\";\\r\\n        \\r\\n    });\\r\\n\\r\\n    // Generate path to the directory of source files\\r\\n    var source_files_directory = System.IO.Path.Combine(\\r\\n        Epicor.Utility.SpecialPath.DeploymentServerDirectory,\\r\\n        $\\\"BPM/Sources/#Efx/efx.{LibraryID.ToLower()}\\\");\\r\\n\\r\\n    // Validate source directory exists\\r\\n    if (!Directory.Exists(source_files_directory))\\r\\n    {\\r\\n        throw new DirectoryNotFoundException($\\\"Source directory not found: {source_files_directory}\\\");\\r\\n    }\\r\\n\\r\\n    // Get the newest folder\\r\\n    var newest_folder = System.IO.Directory.GetDirectories(source_files_directory)\\r\\n        .Select(d => new { DirectoryName = d, LastWriteTime = System.IO.Directory.GetLastWriteTime(d) })\\r\\n        .OrderByDescending(d => d.LastWriteTime)\\r\\n        .FirstOrDefault()?.DirectoryName;\\r\\n\\r\\n    if (string.IsNullOrEmpty(newest_folder))\\r\\n    {\\r\\n        throw new DirectoryNotFoundException(\\\"No source folders found\\\");\\r\\n    }\\r\\n\\r\\n    using (var memory_stream = new MemoryStream())\\r\\n{\\r\\n    using (var archive = new ZipArchive(memory_stream, ZipArchiveMode.Create, true))\\r\\n    {\\r\\n        // Add source files\\r\\n        var folder_path = Path.Combine(source_files_directory, newest_folder);\\r\\n        var source_files = Directory.GetFiles(folder_path);\\r\\n        \\r\\n        foreach (var file in source_files)\\r\\n        {\\r\\n            var file_info = new FileInfo(file);\\r\\n            var zip_entry = archive.CreateEntry(file_info.Name, CompressionLevel.Optimal);\\r\\n            \\r\\n            using (var entry_stream = zip_entry.Open())\\r\\n            using (var file_stream = File.OpenRead(file))\\r\\n            {\\r\\n                file_stream.CopyTo(entry_stream);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Add assembly files to same directory\\r\\n        foreach (var assembly_path in assembly_paths)\\r\\n        {\\r\\n            var file_info = new FileInfo(assembly_path);\\r\\n            var zip_entry = archive.CreateEntry(file_info.Name, CompressionLevel.Optimal);\\r\\n            \\r\\n            using (var entry_stream = zip_entry.Open())\\r\\n            using (var file_stream = File.OpenRead(assembly_path))\\r\\n            {\\r\\n                file_stream.CopyTo(entry_stream);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Validate total zip size\\r\\n    if (memory_stream.Length > MAX_TOTAL_ZIP_SIZE_BYTES)\\r\\n    {\\r\\n        throw new InvalidOperationException(\\r\\n            $\\\"Total zip size exceeds maximum allowed size of {MAX_TOTAL_ZIP_SIZE_BYTES / (1024 * 1024)}MB\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Convert to base64\\r\\n    var zip_file_bytes = memory_stream.ToArray();\\r\\n    var zip_file_base64 = Convert.ToBase64String(zip_file_bytes);\\r\\n    Files = zip_file_base64;\\r\\n\\r\\n    }\\r\\n}\\r\\ncatch (Exception e)\\r\\n{\\r\\n    Message += $\\\"Error creating zip file: {e.Message}\\\";\\r\\n    Error = true;\\r\\n}\",\"Usings\":\"using System.IO;\\r\\nusing System.IO.Compression;\"}","FunctionSignature":[{"Response":false,"ParameterID":1,"ArgumentName":"LibraryID","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Files","Order":3,"DataType":"System.String","Optional":false}]},{"FunctionID":"DownloadSourceFiles","Description":"Downloads the source files for a library.","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"using System.IO;&#xA;using System.IO.Compression;\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"Get Library Files\" Id=\"2c9f700a-2caf-4324-b13d-bb742d38feb6\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"try&#xD;&#xA;{&#xD;&#xA;    // Ensure that the library is set to dump sources&#xD;&#xA;    CallService&lt;EfxLibraryDesignerSvcContract&gt;(svc =&gt; {&#xD;&#xA;    &#xD;&#xA;        var lib = svc.GetLibrary(LibraryID);&#xD;&#xA;        &#xD;&#xA;        var libHead = lib.EfxLibrary.FirstOrDefault();&#xD;&#xA;        &#xD;&#xA;        if(libHead == null)&#xD;&#xA;        {&#xD;&#xA;            throw new Exception(&quot;Unable to retrieve library.&quot;);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        if(!libHead.DumpSources)&#xD;&#xA;        {&#xD;&#xA;          libHead.DumpSources = true;&#xD;&#xA;          libHead.RowMod = &quot;U&quot;;&#xD;&#xA;          &#xD;&#xA;          svc.ApplyChangesWithDiagnostics(ref lib, out _);&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    // Generate path to the directory of source files for the function&#xD;&#xA;    var sourceFilesDirectory = System.IO.Path.Combine(&#xD;&#xA;        Epicor.Utility.SpecialPath.DeploymentServerDirectory,&#xD;&#xA;        $&quot;BPM/Sources/#Efx/efx.{LibraryID.ToLower()}&quot;);&#xD;&#xA;&#xD;&#xA;    // Get the list of files in the directory and store them in a list&#xD;&#xA;    var sourceFiles = System.IO.Directory.GetFiles(sourceFilesDirectory);&#xD;&#xA;&#xD;&#xA;    // Get the newest folder in the directory&#xD;&#xA;    var newestFolder = System.IO.Directory.GetDirectories(sourceFilesDirectory)&#xD;&#xA;        .Select(d =&gt; new { DirectoryName = d, LastWriteTime = System.IO.Directory.GetLastWriteTime(d) })&#xD;&#xA;        .OrderByDescending(d =&gt; d.LastWriteTime)&#xD;&#xA;        .First().DirectoryName;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    using (var memoryStream = new MemoryStream())&#xD;&#xA;    {&#xD;&#xA;        // Create a zip archive in memory&#xD;&#xA;        using (var archive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true))&#xD;&#xA;        {&#xD;&#xA;            var folderPath = Path.Combine(sourceFilesDirectory, newestFolder);&#xD;&#xA;            var files = Directory.GetFiles(folderPath);&#xD;&#xA;&#xD;&#xA;            foreach (var file in files)&#xD;&#xA;            {&#xD;&#xA;                var fileInfo = new FileInfo(file);&#xD;&#xA;                var zipEntry = archive.CreateEntry(fileInfo.Name, CompressionLevel.Optimal);&#xD;&#xA;&#xD;&#xA;                using (var entryStream = zipEntry.Open())&#xD;&#xA;                using (var fileStream = File.OpenRead(file))&#xD;&#xA;                {&#xD;&#xA;                    fileStream.CopyTo(entryStream);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        // Convert the zip file in memory to a base64 string&#xD;&#xA;        var zipFileBytes = memoryStream.ToArray();&#xD;&#xA;        var zipFileBase64 = Convert.ToBase64String(zipFileBytes);&#xD;&#xA;&#xD;&#xA;        Files = zipFileBase64;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message += e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">154</x:Double>\r\n          <x:Double x:Key=\"ElementY\">105</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>214,105</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":false,"ParameterID":1,"ArgumentName":"LibraryID","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Files","Order":3,"DataType":"System.String","Optional":false}]},{"FunctionID":"ListAssemblies","Description":"Returns a list of all assemblies in the server directory.","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"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","Body":"<DirectiveDefinition2 AdditionalUsings=\"using System.Runtime;\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"Execute Custom Code 0\" Id=\"036b79d0-d4ba-4f1e-ac18-3a11803b359f\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"try&#xD;&#xA;{&#xD;&#xA;    var sourceFilesDirectory = System.IO.Path.Combine(&#xD;&#xA;          Epicor.Utility.SpecialPath.DeploymentServerDirectory, &#xD;&#xA;          $&quot;Assemblies&quot;);&#xD;&#xA;&#xD;&#xA;    // Preallocate with larger initial capacity to completely avoid resizing&#xD;&#xA;    Assemblies = new DataSet();&#xD;&#xA;    var dtAssemblies = new System.Data.DataTable(&quot;Assemblies&quot;) { MinimumCapacity = 8000 };&#xD;&#xA;    dtAssemblies.Columns.Add(&quot;Name&quot;, typeof(string));&#xD;&#xA;    dtAssemblies.Columns.Add(&quot;FileName&quot;, typeof(string));&#xD;&#xA;    dtAssemblies.Columns.Add(&quot;Version&quot;, typeof(string));&#xD;&#xA;    Assemblies.Tables.Add(dtAssemblies);&#xD;&#xA;    &#xD;&#xA;    // Get all files first&#xD;&#xA;    var dllFiles = System.IO.Directory.GetFiles(sourceFilesDirectory, &quot;*.dll&quot;, &#xD;&#xA;        System.IO.SearchOption.TopDirectoryOnly);&#xD;&#xA;    &#xD;&#xA;    // Ultra-aggressive thread count - more threads than cores since this is I/O bound&#xD;&#xA;    int threadCount = Math.Min(Environment.ProcessorCount * 4, dllFiles.Length);&#xD;&#xA;    int filesPerThread = (dllFiles.Length + threadCount - 1) / threadCount;&#xD;&#xA;    &#xD;&#xA;    // Pre-size arrays&#xD;&#xA;    var results = new System.Data.DataRow[dllFiles.Length];&#xD;&#xA;    var remainingThreads = threadCount;&#xD;&#xA;    var allDone = new System.Threading.AutoResetEvent(false);&#xD;&#xA;    var syncObject = new object();&#xD;&#xA;&#xD;&#xA;    // Create fixed buffers for each thread to avoid allocation&#xD;&#xA;    var bufferSize = 16384; // Larger buffer for fewer I/O operations&#xD;&#xA;    var buffers = new byte[threadCount][];&#xD;&#xA;    for (int i = 0; i &lt; threadCount; i++)&#xD;&#xA;    {&#xD;&#xA;        buffers[i] = new byte[bufferSize];&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Preload FileVersionInfo objects to reduce I/O contention&#xD;&#xA;    System.Threading.ThreadPool.SetMinThreads(threadCount, threadCount);&#xD;&#xA;    &#xD;&#xA;    // Process in parallel with more aggressive chunking&#xD;&#xA;    for (int i = 0; i &lt; threadCount; i++)&#xD;&#xA;    {&#xD;&#xA;        var threadIndex = i;&#xD;&#xA;        var buffer = buffers[i];&#xD;&#xA;        var startIndex = threadIndex * filesPerThread;&#xD;&#xA;        var endIndex = Math.Min(startIndex + filesPerThread, dllFiles.Length);&#xD;&#xA;        &#xD;&#xA;        System.Threading.ThreadPool.QueueUserWorkItem(_ =&gt;&#xD;&#xA;        {&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                for (int fileIndex = startIndex; fileIndex &lt; endIndex; fileIndex++)&#xD;&#xA;                {&#xD;&#xA;                    string dllFile = dllFiles[fileIndex];&#xD;&#xA;                    try&#xD;&#xA;                    {&#xD;&#xA;                        // Aggressive FileStream optimizations&#xD;&#xA;                        using (var stream = new System.IO.FileStream(&#xD;&#xA;                            dllFile,&#xD;&#xA;                            System.IO.FileMode.Open,&#xD;&#xA;                            System.IO.FileAccess.Read,&#xD;&#xA;                            System.IO.FileShare.Read,&#xD;&#xA;                            bufferSize,&#xD;&#xA;                            System.IO.FileOptions.SequentialScan))&#xD;&#xA;                        {&#xD;&#xA;                            var versionInfo = System.Diagnostics.FileVersionInfo.GetVersionInfo(dllFile);&#xD;&#xA;                            &#xD;&#xA;                            // Reuse strings where possible&#xD;&#xA;                            var fileName = System.IO.Path.GetFileName(dllFile);&#xD;&#xA;                            var row = dtAssemblies.NewRow();&#xD;&#xA;                            &#xD;&#xA;                            // Manual string manipulation to avoid extra allocations&#xD;&#xA;                            var dotIndex = fileName.LastIndexOf('.');&#xD;&#xA;                            row[&quot;Name&quot;] = dotIndex &gt; 0 ? fileName.Substring(0, dotIndex) : fileName;&#xD;&#xA;                            row[&quot;FileName&quot;] = fileName;&#xD;&#xA;                            row[&quot;Version&quot;] = versionInfo.FileVersion ?? &quot;Unknown&quot;;&#xD;&#xA;                            &#xD;&#xA;                            results[fileIndex] = row;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    catch (Exception ex)&#xD;&#xA;                    {&#xD;&#xA;                        lock (syncObject)&#xD;&#xA;                        {&#xD;&#xA;                            Message += $&quot;Warning: Failed to process {dllFile}. {ex.Message}\\n&quot;;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            finally&#xD;&#xA;            {&#xD;&#xA;                if (System.Threading.Interlocked.Decrement(ref remainingThreads) == 0)&#xD;&#xA;                {&#xD;&#xA;                    allDone.Set();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Wait for completion&#xD;&#xA;    allDone.WaitOne();&#xD;&#xA;    &#xD;&#xA;    // Bulk insert all rows at once&#xD;&#xA;    dtAssemblies.BeginLoadData();&#xD;&#xA;    var validRows = 0;&#xD;&#xA;    for (int i = 0; i &lt; results.Length; i++)&#xD;&#xA;    {&#xD;&#xA;        if (results[i] != null)&#xD;&#xA;        {&#xD;&#xA;            dtAssemblies.Rows.Add(results[i]);&#xD;&#xA;            validRows++;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    dtAssemblies.EndLoadData();&#xD;&#xA;&#xD;&#xA;    Message += $&quot;Successfully processed {validRows} assembly files.\\n&quot;;&#xD;&#xA;}&#xD;&#xA;catch (Exception ex)&#xD;&#xA;{&#xD;&#xA;    Error = true;&#xD;&#xA;    Message += $&quot;Error: Failed to process assembly files. {ex.Message}\\n&quot;;&#xD;&#xA;}\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">210</x:Double>\r\n          <x:Double x:Key=\"ElementY\">117</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>270,117</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Assemblies","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListBAQs","Description":"Lists all custom BAQs in the environment","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"List BAQs\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Retrieve BAQs&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    var baqs = Db.QueryHdr&#xD;&#xA;        .Where(x =&gt; x.Company == CompanyID &amp;&amp; !x.SystemFlag)&#xD;&#xA;        .ToList();&#xD;&#xA;&#xD;&#xA;    // Create a new tableset to hold the results&#xD;&#xA;    var ds = new DataSet(&quot;BAQs&quot;);&#xD;&#xA;    var tableset = new DataTable(&quot;BAQs&quot;);&#xD;&#xA;    ds.Tables.Add(tableset);&#xD;&#xA;&#xD;&#xA;    // Add the columns to the tableset&#xD;&#xA;    tableset.Columns.Add(&quot;Company&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BAQID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;Description&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;Author&quot;, typeof(string));&#xD;&#xA;&#xD;&#xA;    // Add the rows to the tableset&#xD;&#xA;    foreach (var baq in baqs)&#xD;&#xA;    {&#xD;&#xA;        var row = tableset.NewRow();&#xD;&#xA;        row[&quot;Company&quot;] = baq.Company;&#xD;&#xA;        row[&quot;BAQID&quot;] = baq.QueryID;&#xD;&#xA;        row[&quot;Description&quot;] = baq.Description;&#xD;&#xA;        row[&quot;Author&quot;] = baq.AuthorID;&#xD;&#xA;        tableset.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    // Return the results&#xD;&#xA;    BAQs = ds;&#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"BAQs","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListBPMs","Description":"Lists all BPMs","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"Get BPMs\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Retrieve BPMs&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    var bpms = Db.BpDirective.Where(x =&gt; x.Company == CompanyID &amp;&amp; x.Name != &quot;##BASE##&quot;).ToList();&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    // Create a new tableset to hold the results&#xD;&#xA;    var ds = new DataSet(&quot;BPMs&quot;);&#xD;&#xA;    var tableset = new DataTable(&quot;BPMs&quot;);&#xD;&#xA;    ds.Tables.Add(tableset);&#xD;&#xA;&#xD;&#xA;    // Add the columns to the tableset&#xD;&#xA;    tableset.Columns.Add(&quot;Company&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMName&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMGroup&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMDescription&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMType&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMIsEnabled&quot;, typeof(bool));&#xD;&#xA;    tableset.Columns.Add(&quot;BPMTarget&quot;, typeof(string));&#xD;&#xA;&#xD;&#xA;    // Add the rows to the tableset&#xD;&#xA;    foreach (var bpm in bpms)&#xD;&#xA;    {&#xD;&#xA;        var bpmType = &quot;&quot;;&#xD;&#xA;        switch (bpm.Source)&#xD;&#xA;        {&#xD;&#xA;            case &quot;BO&quot;:&#xD;&#xA;                bpmType = &quot;Method Directive&quot;;&#xD;&#xA;                break;&#xD;&#xA;            case &quot;DB&quot;:&#xD;&#xA;                bpmType = &quot;Data Directive&quot;;&#xD;&#xA;                break;&#xD;&#xA;            case &quot;DQ&quot;:&#xD;&#xA;                bpmType = &quot;BAQ Directive&quot;;&#xD;&#xA;                break;&#xD;&#xA;            default:&#xD;&#xA;                bpmType = &quot;Unknown&quot;;&#xD;&#xA;                break;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var bpTarget = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;        switch (bpm.Source)&#xD;&#xA;        {&#xD;&#xA;            case &quot;DQ&quot;:&#xD;&#xA;                var methodString = bpm.BpMethodCode;&#xD;&#xA;                // Find the index of the first '/'&#xD;&#xA;                int slashIndex = methodString.IndexOf('/');&#xD;&#xA;&#xD;&#xA;                // Check if '/' was found&#xD;&#xA;                if (slashIndex != -1)&#xD;&#xA;                    bpTarget = methodString.Substring(slashIndex + 1);&#xD;&#xA;                else&#xD;&#xA;                    bpTarget = methodString;&#xD;&#xA;                break;&#xD;&#xA;            default:&#xD;&#xA;                bpTarget = bpm.BpMethodCode;&#xD;&#xA;                break;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        var row = tableset.NewRow();&#xD;&#xA;        row[&quot;Company&quot;] = bpm.Company;&#xD;&#xA;        row[&quot;BPMID&quot;] = bpm.DirectiveID;&#xD;&#xA;        row[&quot;BPMDescription&quot;] = bpm.Description;&#xD;&#xA;        row[&quot;BPMType&quot;] = bpmType;&#xD;&#xA;        row[&quot;BPMIsEnabled&quot;] = bpm.IsEnabled;&#xD;&#xA;        row[&quot;BPMName&quot;] = bpm.Name;&#xD;&#xA;        row[&quot;BPMGroup&quot;] = bpm.DirectiveGroup;&#xD;&#xA;        row[&quot;BPMTarget&quot;] = bpTarget;&#xD;&#xA;        tableset.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    // Add the tableset to the output&#xD;&#xA;    BPMs = ds;&#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"BPMs","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListDashboards","Description":"Lists all custom dashboards in the environment","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"Execute Custom Code 0\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"var hello = &quot;&quot;;\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Dashboards","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListFunctionLibraries","Description":"Retrieves all function libraries in the environment.","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"GetLibraries\" Id=\"8ad3ab7b-7d36-4c35-a104-a8eaacab31a5\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Get Libraries&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    CallService&lt;EfxLibraryDesignerSvcContract&gt;(svc =&gt;&#xD;&#xA;    {&#xD;&#xA;        var publishedLibraries = svc.GetLibraryList2(&quot;&quot;, 0, 0, 0);&#xD;&#xA;        var unpublishedLibraries = svc.GetLibraryList2(&quot;&quot;, 0, 1, 0);&#xD;&#xA;&#xD;&#xA;        // Create a new tableset to hold the results&#xD;&#xA;        var ds = new DataSet(&quot;Libraries&quot;);&#xD;&#xA;        var tableset = new DataTable(&quot;Libraries&quot;);&#xD;&#xA;        ds.Tables.Add(tableset);&#xD;&#xA;&#xD;&#xA;        // Add the columns to the tableset&#xD;&#xA;        tableset.Columns.Add(&quot;LibraryID&quot;, typeof(string));&#xD;&#xA;        tableset.Columns.Add(&quot;LibraryDescription&quot;, typeof(string));&#xD;&#xA;        tableset.Columns.Add(&quot;Published&quot;, typeof(bool));&#xD;&#xA;&#xD;&#xA;        // Add the rows to the tableset&#xD;&#xA;        foreach (var library in publishedLibraries.EfxLibraryList)&#xD;&#xA;        {&#xD;&#xA;            tableset.Rows.Add(library.LibraryID, library.Description, library.Published);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        foreach (var library in unpublishedLibraries.EfxLibraryList)&#xD;&#xA;        {&#xD;&#xA;            tableset.Rows.Add(library.LibraryID, library.Description, library.Published);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        // Set the return value&#xD;&#xA;        Libraries = ds;&#xD;&#xA;    });&#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">154</x:Double>\r\n          <x:Double x:Key=\"ElementY\">122</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>214,122</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Libraries","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListKineticLayers","Description":"Lists all Kinetic Layers in environment","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"GetLayers\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Retrieve Kinetic Customization Layers&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    var layers = Db.XXXDef&#xD;&#xA;                    .Where(x =&gt; (x.Company == CompanyID || x.Company == &quot;&quot;) &amp;&amp; x.TypeCode == &quot;KNTCCUSTLAYER&quot; &amp;&amp; !x.SystemFlag)&#xD;&#xA;                    .ToList();&#xD;&#xA;&#xD;&#xA;    // Create a new tableset to hold the results&#xD;&#xA;    var ds = new DataSet(&quot;KineticLayers&quot;);&#xD;&#xA;    var tableset = new DataTable(&quot;KineticLayers&quot;);&#xD;&#xA;    ds.Tables.Add(tableset);&#xD;&#xA;&#xD;&#xA;    // Add the columns to the tableset&#xD;&#xA;    tableset.Columns.Add(&quot;Company&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;LayerID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;LayerDescription&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;KineticApp&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;LastUpdatedDate&quot;, typeof(DateTime));&#xD;&#xA;&#xD;&#xA;    // Add the rows to the tableset&#xD;&#xA;    foreach (var layer in layers)&#xD;&#xA;    {&#xD;&#xA;        var row = tableset.NewRow();&#xD;&#xA;        row[&quot;Company&quot;] = layer.Company;&#xD;&#xA;        row[&quot;LayerID&quot;] = layer.Key1;&#xD;&#xA;        row[&quot;LayerDescription&quot;] = layer.Description;&#xD;&#xA;        row[&quot;KineticApp&quot;] = layer.Key2;&#xD;&#xA;        row[&quot;LastUpdatedDate&quot;] = layer.LastUpdated;&#xD;&#xA;        tableset.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    // Return the tableset&#xD;&#xA;    KineticLayers = ds;&#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"KineticLayers","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListLibraryServices","Description":"Returns all services that can be utilized in a function library.","Kind":2,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":null,"Body":"{\"Code\":\"// Initialize result dataset and message\\r\\nServices = new DataSet();\\r\\nMessage = string.Empty;\\r\\nError = false;\\r\\n\\r\\n// Create results table with explicit column type\\r\\nvar results_table = new DataTable(\\\"ProcessedBODefs\\\");\\r\\nresults_table.Columns.Add(\\\"ServiceName\\\", typeof(string));\\r\\nresults_table.Columns.Add(\\\"Namespace\\\", typeof(string));\\r\\nresults_table.Columns.Add(\\\"SystemCode\\\", typeof(string));\\r\\nresults_table.Columns.Add(\\\"Name\\\", typeof(string));\\r\\nServices.Tables.Add(results_table);\\r\\n\\r\\n// Define processing function with explicit error handling\\r\\nFunc<ZBODef, string> combine_bo_fields = (bo_def_row) =>\\r\\n{\\r\\n    if (bo_def_row == null)\\r\\n        throw new ArgumentNullException(nameof(bo_def_row));\\r\\n        \\r\\n    return string.Concat(\\r\\n        bo_def_row.SystemCode ?? string.Empty,\\r\\n        \\\":\\\",\\r\\n        bo_def_row.ObjectNS ?? string.Empty,\\r\\n        \\\":\\\",\\r\\n        bo_def_row.ClassName ?? string.Empty\\r\\n    );\\r\\n};\\r\\n\\r\\ntry\\r\\n{\\r\\n    // Retrieve all records with safety limit\\r\\n    const int max_records = 10000;\\r\\n    var bo_def_rows = Db.ZBODef.Take(max_records).ToList();\\r\\n    \\r\\n    if (bo_def_rows == null || bo_def_rows.Count == 0)\\r\\n    {\\r\\n        Message = \\\"No records found in ZBODef table\\\";\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    if (bo_def_rows.Count == max_records)\\r\\n    {\\r\\n        Message = $\\\"Warning: Processing limited to {max_records} records\\\";\\r\\n    }\\r\\n\\r\\n    // Process in batches for better performance\\r\\n    const int batch_size = 1000;\\r\\n    for (var i = 0; i < bo_def_rows.Count; i += batch_size)\\r\\n    {\\r\\n        var current_batch = bo_def_rows\\r\\n            .Skip(i)\\r\\n            .Take(batch_size);\\r\\n\\r\\n        foreach (var bo_def_row in current_batch)\\r\\n        {\\r\\n            try\\r\\n            {\\r\\n                var combined_string = combine_bo_fields(bo_def_row);\\r\\n                results_table.Rows.Add(combined_string, bo_def_row.ObjectNS, bo_def_row.SystemCode, bo_def_row.ClassName);\\r\\n                \\r\\n            }\\r\\n            catch (Exception row_ex)\\r\\n            {\\r\\n                // Log individual row errors but continue processing\\r\\n                Message += $\\\"Error processing row {i}: {row_ex.Message}; \\\";\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    Message += $\\\"Successfully processed {results_table.Rows.Count} records\\\";\\r\\n}\\r\\ncatch (Exception ex)\\r\\n{\\r\\n    Error = true;\\r\\n    Message = $\\\"Critical error during processing: {ex.Message}\\\";\\r\\n}\",\"Usings\":\"\"}","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Services","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListRDDs","Description":"Lists all Custom SSRS Report Data Definitions","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"Get RDDs\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Retrieve RDDs&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    var rdds = Db.RptDataDef&#xD;&#xA;        .Where(x =&gt; (x.Company == CompanyID || x.Company == &quot;&quot;) &amp;&amp; !x.SystemFlag)&#xD;&#xA;        .ToList();&#xD;&#xA;    &#xD;&#xA;    // Create a new tableset to hold the results&#xD;&#xA;    var ds = new DataSet(&quot;RDDs&quot;);&#xD;&#xA;    var tableset = new DataTable(&quot;RDDs&quot;);&#xD;&#xA;    ds.Tables.Add(tableset);&#xD;&#xA;    &#xD;&#xA;    // Add the columns to the tableset&#xD;&#xA;    tableset.Columns.Add(&quot;Company&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;RDDID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;Description&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;Type&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;DuplicateOf&quot;, typeof(string));&#xD;&#xA;    &#xD;&#xA;    // Add the rows to the tableset&#xD;&#xA;    foreach (var rdd in rdds)&#xD;&#xA;    {&#xD;&#xA;        var row = tableset.NewRow();&#xD;&#xA;        row[&quot;Company&quot;] = rdd.Company;&#xD;&#xA;        row[&quot;RDDID&quot;] = rdd.RptDefID;&#xD;&#xA;        row[&quot;Description&quot;] = rdd.RptDescription;&#xD;&#xA;        row[&quot;Type&quot;] = rdd.RptTypeID;&#xD;&#xA;        row[&quot;DuplicateOf&quot;] = rdd.DuplicateOf;&#xD;&#xA;        tableset.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Return the results&#xD;&#xA;    ReportDefinitions = ds;&#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"ReportDefinitions","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListReports","Description":"Lists all Custom SSRS Reports","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"GetReports\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Retrieve Reports&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    var reports = Db.ReportStyle&#xD;&#xA;        .Where(x =&gt; (x.Company == CompanyID || x.Company == &quot;&quot;) &amp;&amp; !x.SystemFlag)&#xD;&#xA;        .ToList();&#xD;&#xA;&#xD;&#xA;    // Create a new tableset to hold the results&#xD;&#xA;    var ds = new DataSet(&quot;Reports&quot;);&#xD;&#xA;    var tableset = new DataTable(&quot;Reports&quot;);&#xD;&#xA;    ds.Tables.Add(tableset);&#xD;&#xA;&#xD;&#xA;    // Add the columns to the tableset&#xD;&#xA;    tableset.Columns.Add(&quot;Company&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;ReportStyleID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;ReportStyleNum&quot;, typeof(int));&#xD;&#xA;    tableset.Columns.Add(&quot;ReportStyleDesc&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;ReportStyleType&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;ReportStyleDefID&quot;, typeof(string));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    // Add the rows to the tableset&#xD;&#xA;    foreach (var report in reports)&#xD;&#xA;    {&#xD;&#xA;        var row = tableset.NewRow();&#xD;&#xA;        row[&quot;Company&quot;] = report.Company;&#xD;&#xA;        row[&quot;ReportStyleID&quot;] = report.ReportID;&#xD;&#xA;        row[&quot;ReportStyleNum&quot;] = report.StyleNum;&#xD;&#xA;        row[&quot;ReportStyleDesc&quot;] = report.StyleDescription;&#xD;&#xA;        row[&quot;ReportStyleType&quot;] = report.RptTypeID;&#xD;&#xA;        row[&quot;ReportStyleDefID&quot;] = report.RptDefID;&#xD;&#xA;        tableset.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    // Return the results&#xD;&#xA;    Reports = ds;&#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Reports","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListTables","Description":"Returns a list of all ZDataTable records of type DB that are Full Sync","Kind":2,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":null,"Body":"{\"Code\":\"try\\r\\n{\\r\\n    var tables = Db.ZDataTable.Where(t => t.TableType == \\\"DB\\\" && t.FullSync == true).ToList();\\r\\n    var ds = new DataSet();\\r\\n    var dt = new DataTable(\\\"TableNames\\\");\\r\\n    dt.Columns.Add(\\\"TableName\\\", typeof(string));\\r\\n    \\r\\n    foreach(var table in tables)\\r\\n    {\\r\\n        var tableName = string.Concat(table.SystemCode, \\\".\\\", table.DBTableName);\\r\\n        \\r\\n        dt.Rows.Add(tableName);\\r\\n    }\\r\\n    \\r\\n    ds.Tables.Add(dt);\\r\\n    \\r\\n    this.Tables = ds;\\r\\n\\r\\n}\\r\\ncatch(Exception e)\\r\\n{\\r\\n    Error = true;\\r\\n    Message += e.Message; \\r\\n}\",\"Usings\":\"\"}","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"Tables","Order":3,"DataType":"System.Data.DataSet","Optional":false}]},{"FunctionID":"ListUDFields","Description":"Lists all Custom Fields added to the system","Kind":1,"RequireTransaction":false,"SingleRowMode":false,"Private":false,"Disabled":false,"Invalid":false,"Thumbnail":"","Body":"<DirectiveDefinition2 AdditionalUsings=\"{x:Null}\" Version=\"3\" xmlns=\"clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared\" xmlns:icbb=\"clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod\" xmlns:ilbma=\"clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared\" xmlns:scg=\"clr-namespace:System.Collections.Generic;assembly=mscorlib\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\r\n  <DirectiveDefinition2.AdditionalReferences>\r\n    <scg:List x:TypeArguments=\"icbb:ReferencesGroup\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.AdditionalReferences>\r\n  <DirectiveDefinition2.Nodes>\r\n    <x:Reference>__ReferenceID0</x:Reference>\r\n  </DirectiveDefinition2.Nodes>\r\n  <DirectiveDefinition2.StartNode>\r\n    <DirectiveStep Next=\"{x:Null}\" x:Name=\"__ReferenceID0\" DisplayName=\"Get UD Fields\" Id=\"f0236873-34cf-46da-8236-8402e9474447\">\r\n      <DirectiveStep.Action>\r\n        <ilbma:CustomCodeAction PrimaryTable=\"{x:Null}\" Code=\"#region Get UD Fields&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;    // Retrieve the UD fields that have a FieldName that ends with _c&#xD;&#xA;    var udFields = Db.ZDataField&#xD;&#xA;        .Where(x =&gt; x.FieldName.EndsWith(&quot;_c&quot;) &amp;&amp; !x.SystemFlag)&#xD;&#xA;        .ToList();&#xD;&#xA;    &#xD;&#xA;    // Create a new tableset to hold the results&#xD;&#xA;    var ds = new DataSet(&quot;UDFields&quot;);&#xD;&#xA;    var tableset = new DataTable(&quot;UDFields&quot;);&#xD;&#xA;    ds.Tables.Add(tableset);&#xD;&#xA;    &#xD;&#xA;    // Add the columns to the tableset&#xD;&#xA;    tableset.Columns.Add(&quot;DataTableID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;FieldName&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;DBField&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;DBTableName&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;Description&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;DataType&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;Format&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;UseDefault&quot;, typeof(bool));&#xD;&#xA;    tableset.Columns.Add(&quot;Required&quot;, typeof(bool));&#xD;&#xA;    tableset.Columns.Add(&quot;ReadOnly&quot;, typeof(bool));&#xD;&#xA;    tableset.Columns.Add(&quot;FieldLabel&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;InitialValue&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;LikeDataFieldSystemCode&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;LikeDataFieldTableID&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;LikeDataFieldFieldName&quot;, typeof(string));&#xD;&#xA;    tableset.Columns.Add(&quot;FieldScale&quot;, typeof(int));&#xD;&#xA;    &#xD;&#xA;    // Add the rows to the tableset&#xD;&#xA;    foreach (var udField in udFields)&#xD;&#xA;    {&#xD;&#xA;        var row = tableset.NewRow();&#xD;&#xA;        row[&quot;DataTableID&quot;] = udField.DataTableID;&#xD;&#xA;        row[&quot;FieldName&quot;] = udField.FieldName;&#xD;&#xA;        row[&quot;DBField&quot;] = udField.DBFieldName;&#xD;&#xA;        row[&quot;DBTableName&quot;] = udField.DBTableName;&#xD;&#xA;        row[&quot;Description&quot;] = udField.Description;&#xD;&#xA;        row[&quot;DataType&quot;] = udField.DataType;&#xD;&#xA;        row[&quot;Format&quot;] = udField.FieldFormat;&#xD;&#xA;        row[&quot;UseDefault&quot;] = udField.UseDBDefault;&#xD;&#xA;        row[&quot;Required&quot;] = udField.Required;&#xD;&#xA;        row[&quot;ReadOnly&quot;] = udField.ReadOnly;&#xD;&#xA;        row[&quot;FieldLabel&quot;] = udField.FieldLabel;&#xD;&#xA;        row[&quot;InitialValue&quot;] = udField.InitialValue;&#xD;&#xA;        row[&quot;LikeDataFieldSystemCode&quot;] = udField.LikeDataFieldSystemCode;&#xD;&#xA;        row[&quot;LikeDataFieldTableID&quot;] = udField.LikeDataFieldTableID;&#xD;&#xA;        row[&quot;LikeDataFieldFieldName&quot;] = udField.LikeDataFieldName;&#xD;&#xA;        row[&quot;FieldScale&quot;] = udField.FieldScale;&#xD;&#xA;        tableset.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Return the results&#xD;&#xA;    UDFields = ds; &#xD;&#xA;}&#xD;&#xA;catch (Exception e)&#xD;&#xA;{&#xD;&#xA;    Message = e.Message;&#xD;&#xA;    Error = true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#endregion\" ExecutionRule=\"OnceForAllAffected\" Id=\"0\" IsAsync=\"False\" RecordMode=\"Nothing\" TerminateOnError=\"False\" ValidationState=\"Valid\" />\r\n      </DirectiveStep.Action>\r\n      <DirectiveStep.VisualProperties>\r\n        <VisualPropertiesStorage>\r\n          <x:Double x:Key=\"ElementX\">138</x:Double>\r\n          <x:Double x:Key=\"ElementY\">133.20000000000002</x:Double>\r\n          <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n        </VisualPropertiesStorage>\r\n      </DirectiveStep.VisualProperties>\r\n    </DirectiveStep>\r\n  </DirectiveDefinition2.StartNode>\r\n  <DirectiveDefinition2.Variables>\r\n    <scg:List x:TypeArguments=\"DirectiveVariable2\" Capacity=\"0\" />\r\n  </DirectiveDefinition2.Variables>\r\n  <DirectiveDefinition2.VisualProperties>\r\n    <VisualPropertiesStorage>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.CustomCodeActionPluginInstanceCounter\">1</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.DecisionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeBOMethodActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.InvokeEpicorFunctionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.NotifyCollaborateActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.FillTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.UpdateTableByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.RaiseExceptionActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SendMailActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetArgumentActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetBpmDataFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetByQueryActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.SetFieldActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.LogMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Int32 x:Key=\"Ice.UI.Bpm.Widgets.ShowMessageActionPluginInstanceCounter\">0</x:Int32>\r\n      <x:Double x:Key=\"ElementY\">10</x:Double>\r\n      <x:Double x:Key=\"ElementX\">10</x:Double>\r\n      <TextNote x:Key=\"Note\" Background=\"Yellow\" IsExpanded=\"False\" Text=\"\" X=\"0\" Y=\"0\" />\r\n      <LinkProperties x:Key=\"ExitLink\" DestinationConnectorId=\"1\" SourceConnectorId=\"10\">\r\n        <LinkProperties.Points>\r\n          <Point>130,55</Point>\r\n          <Point>198,133</Point>\r\n        </LinkProperties.Points>\r\n      </LinkProperties>\r\n    </VisualPropertiesStorage>\r\n  </DirectiveDefinition2.VisualProperties>\r\n</DirectiveDefinition2>","FunctionSignature":[{"Response":true,"ParameterID":1,"ArgumentName":"Message","Order":1,"DataType":"System.String","Optional":false},{"Response":true,"ParameterID":2,"ArgumentName":"Error","Order":2,"DataType":"System.Boolean","Optional":false},{"Response":true,"ParameterID":3,"ArgumentName":"UDFields","Order":3,"DataType":"System.Data.DataSet","Optional":false}]}],"LibraryReferences":[{"ReferenceType":0,"ReferenceID":"Newtonsoft.Json.dll"},{"ReferenceType":1,"ReferenceID":"ICE.BpDirective","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.QueryHdr","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.ReportStyle","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.RptDataDef","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.XXXDef","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.ZBODef","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.ZDataField","Updatable":false},{"ReferenceType":1,"ReferenceID":"ICE.ZDataTable","Updatable":false},{"ReferenceType":2,"ReferenceID":"ICE:BO:BAQDesigner"},{"ReferenceType":2,"ReferenceID":"ICE:BO:BpMethod"},{"ReferenceType":2,"ReferenceID":"ICE:Lib:EfxLibraryDesigner"}],"LibraryMappings":[{"Company":"EPIC01","Allowed":true},{"Company":"EPIC02","Allowed":true},{"Company":"EPIC03","Allowed":true},{"Company":"EPIC04","Allowed":true},{"Company":"EPIC05","Allowed":true},{"Company":"EPIC06","Allowed":true},{"Company":"EPIC07","Allowed":true},{"Company":"EPICPF","Allowed":true},{"Company":"GPC","Allowed":true}]}}